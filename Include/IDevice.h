#ifndef _CGIMAGETECH_INTERFACE_H_
#define _CGIMAGETECH_INTERFACE_H_

#include <DVP_DeviceDefine.h>

#ifdef CGUSBDEVICE_EXPORTS 
	#define CG_INTERFACE_API	 __declspec(dllexport)
#else 
	#define CG_INTERFACE_API	 __declspec(dllimport) 
#endif

class CG_INTERFACE_API IDevice
{
public:
	/*--------------------------------------------------------------------------*\
	| 功  能：获取SDK版本号
	|
	| 返回值：调用成功返回STATUS_OK，否则返回错误代码
	|
	| 参  数：
	|         1  DWORD  adwVersion			SDK版本号		输出参数
	\*--------------------------------------------------------------------------*/
	static DeviceStatus DeviceGetSDKVersion(DWORD adwVersion[4]);

	/*--------------------------------------------------------------------------*\
	| 功  能：初始化SDK
	|
	| 返回值：调用成功返回STATUS_OK，否则返回错误代码
	|
	| 参  数：                                                            
	|         1  HANDLE		handle		事件通知窗口句柄	 输入参数
	|		  2  BOOL		bUsedStatus 启用设备使用标记	 输入参数
	|         3  BOOL       bPNP		启用即插即用         输入参数
	| 注意： 当设备需要使用即插即用功能时，事件通知窗口必须设置为NULL，否则不会启用该功能
	\*--------------------------------------------------------------------------*/
	static DeviceStatus DeviceInitialSDK(HANDLE hHandle, BOOL bUsedStatus, BOOL bPNP = FALSE);

	/*---------------------------------------------------------------------------*\
	| 功  能：反初始化SDK
	|
	| 返回值：调用成功返回STATUS_OK，否则返回错误代码
	\*--------------------------------------------------------------------------*/
	static DeviceStatus DeviceUnInitialSDK();

	/*--------------------------------------------------------------------------*\
	| 功  能：枚举相机设备                                                     
	|                                                                          
	| 返回值：调用成功返回STATUS_OK，否则返回错误代码
	|
	| 参  数：    
	|         1  LPEnumDeviceParam	pDeviceList		相机列表的信息结构数组指针					输入参数
	|         2  INT				*piNums			输入和返回相机列表数组的个数指标			输入参数
	\*------------------------------------------------------------------------*/
	static DeviceStatus EnumDevice(LPEnumDeviceParam pDeviceList, INT *piNums);

	/*------------------------------------------------------------------------*\
	| 功  能：打开相机设备                                                     
	|                                                                          
	| 返回值：调用成功返回STATUS_OK，否则返回错误代码
	|
	| 参  数： 
	|         1  IDevice		**pDevice		设备接口				输出参数
	\*------------------------------------------------------------------------*/
	static DeviceStatus SmartOpenDevice(IDevice **pDevice);

	/*------------------------------------------------------------------------*\
	| 功  能：打开指定相机设备                                                     
	|                                                                          
	| 返回值：调用成功返回STATUS_OK，否则返回错误代码	
	|
	| 参  数： 
	|         1  UCHAR				dev				设备索引序列(0-n)	 输入参数
	|         2  IDevice			**pDevice		设备接口			 输出参数
	|		  3  OpenDeviceFlag		flag			打开设备的方式		 输入参数
	\*------------------------------------------------------------------------*/
	static DeviceStatus OpenDevice(UionOpenDeviceParam param, IDevice **pDevice, emOpenDeviceFlag flag = OF_BYPOSITION);

	/*------------------------------------------------------------------------*\
	| 功  能：增加相机的引用                                                     
	|                                                                          
	| 返回值：返回上一次的引用数												
	\*------------------------------------------------------------------------*/
	virtual ULONG AddReference() = 0;

	/*------------------------------------------------------------------------*\
	| 功  能：减少相机的引用                                                     
	|                                                                          
	| 返回值：返回上一次的引用数	
	| 注意： 当设备的引用数为0时，设备会自动删除
	\*------------------------------------------------------------------------*/
	virtual ULONG Release() = 0;

	/*------------------------------------------------------------------------*\
	| 功  能：关闭相机设备                                                    
	\*------------------------------------------------------------------------*/
	virtual DeviceStatus CloseDevice() = 0;

	/*------------------------------------------------------------------------*\
	| 功  能：同步关闭相机设备                                                     
	|                                                                          
	| 返回值：调用成功返回STATUS_OK，否则返回错误代码	
	| 注意： 该函数主要用于即插即用功能时，防止多个进程之间枚举设备时的冲突。
	| 如不使用即插即用功能时，则不需要调用此函数，可以直接调用IDevice的CloseDevice()接口来释放设备。
	\*------------------------------------------------------------------------*/
	virtual DeviceStatus SyncCloseDevice() = 0;

	/*------------------------------------------------------------------------*\
	| 功  能：得到设备地址 
	|                                                                          
	| 返回值：调用成功返回设备的地址，否则返回0
	\*------------------------------------------------------------------------*/
	virtual UCHAR GetDeviceAddress() = 0;

	/*------------------------------------------------------------------------*\
	| 功  能：得到设备句柄 
	|                                                                          
	| 返回值：调用成功返回设备的句柄，否则返回NULL
	\*------------------------------------------------------------------------*/
	virtual HANDLE GetDeviceHandle() = 0;

	/*-----------------------------------------------------------------------*\
	| 功  能：写入相机序列号
	|
	| 返回值：调用成功返回STATUS_OK，否则返回错误代码
	|
	| 参  数：
	|         1  BYTE  *pbySN      序列号数据							输入参数
	|         2  INT   iSize       序列号字节数							输入参数
	|         3  INT   *piWritten  实际写入的字节数						输出参数
	|		  4  INT   iLevel      需要设定的序列号级别，只能是1或者2   输入参数
	|
	| 注  意：
	|         1、相机序列号分为3级。0级是相机唯一序列号，出厂时已经设定好，1级和2级留给二次开发使用。
	|            每级序列号最大长度都是32个字节。
	\*-------------------------------------------------------------------------*/
	virtual DeviceStatus WriteSerialNumber(BYTE *pbySN, INT iSize, INT *piWritten, INT iLevel = 2) = 0;

	/*-------------------------------------------------------------------------*\
	| 功  能：获取相机序列号
	|
	| 返回值：调用成功返回STATUS_OK，否则返回错误代码
	|
	| 参  数：
	|         1  BYTE  *pbySN     序列号数据                         输出参数
	|         2  INT   iSize      序列号字节数                       输入参数
	|         3  INT   *piReaded  实际获取的字节数                   输出参数
	|		  4  INT   iLevel     需要设定的序列号级别				 输入参数
	|
	| 注  意：
	|          1、相机序列号分为3级。0级是相机唯一序列号，出厂时已经设定好，1级和2级留给二次开发使用。
	|            每级序列号最大长度都是32个字节。
	\*--------------------------------------------------------------------------*/
	virtual DeviceStatus ReadSerialNumber(BYTE *pbySN, INT iSize, INT *piReaded, INT iLevel = 2) = 0;

	/*-------------------------------------------------------------------------*\
	| 功  能：创建相机的属性配置窗口
	|
	| 返回值：调用成功返回STATUS_OK，否则返回错误代码
	|
	| 参  数：
	|		  1  HWND	hParent		配置窗口的父窗口句柄				输入参数
	|         2  TCHAR	*pWinText	配置窗口的标题栏字符串指针          输入参数
	|
	\*--------------------------------------------------------------------------*/
	virtual DeviceStatus DeviceCreateSettingPage(HWND hParent, LPCTSTR pText = NULL) = 0;

	/*-------------------------------------------------------------------------*\
	| 功  能：显示相机配置窗口
	|
	| 返回值：调用成功返回STATUS_OK，否则返回错误代码
	|
	| 参  数：
	|         1  BOOL  bShow		是否显示配置窗口            输入参数
	|
	\*--------------------------------------------------------------------------*/
	virtual DeviceStatus DeviceShowSettingPage(BOOL bShow) = 0;

	/*------------------------------------------------------------------------*\
	| 功  能：是否为单色相机
	|                                                                          
	| 返回值：设备是单色相机返回TRUE，否则返回FALSE
	\*------------------------------------------------------------------------*/
	virtual BOOL IsMonochromeDevice() = 0;

	/*--------------------------------------------------------------------*\
	| 功  能：初始化相机                                 
	|                                                                      
	| 返回值：调用成功返回STATUS_OK，否则返回错误代码                      
	|                                                                      
	| 参  数：                                                             
	|         1  HWND				hWndDisplay		显示窗口句柄								输入参数
	|		  2  BOOL				bGetMode		是否使用DeviceGetImageBuffer函数调用方式	输入参数	
	|		  3  BOOL				bAutoParam		是否启用参数自动读写功能					输入参数	
	\*--------------------------------------------------------------------*/
	virtual DeviceStatus DeviceInit(HWND hWndDisplay, BOOL bGetMode, BOOL bAutoParam) = 0;

	/*--------------------------------------------------------------------*\
	| 功  能：初始化相机
	| 
	| 返回值：调用成功返回STATUS_OK，否则返回错误代码 
	|             
	| 参  数：
	|         1  ReceiveFrameProc	pFun		回调函数指针							  输入参数
	|         2  LPVOID				lParam		指向一个值的指针，该值传递给回调函数	  输入参数
	|		  3  HWND				hWndDisplay 显示窗口句柄							  输入参数
	|		  3  BOOL				bAutoParam	是否启用参数自动读写功能				  输入参数
	\*--------------------------------------------------------------------*/
	virtual DeviceStatus DeviceInitEx(ReceiveFrameProc *pFun, LPVOID lParam, HWND hWndDisplay, BOOL bAutoParam) = 0;


	/*--------------------------------------------------------------------*\
	| 功  能：初始化相机（通过外部文件存储方式加载参数） 
	| 
	| 返回值：调用成功返回STATUS_OK，否则返回错误代码 
	|             
	| 参  数：
	|         1  ReceiveFrameProc	pFun		回调函数指针							  输入参数
	|         2  LPVOID				lParam		指向一个值的指针，该值传递给回调函数	  输入参数
	|		  3  HWND				hWndDisplay 显示窗口句柄							  输入参数
	|		  3  LPCTSTR			strFileName	读写参数保存的参数保存文件				  输入参数
	\*--------------------------------------------------------------------*/
	virtual DeviceStatus DeviceInitExFromFile(ReceiveFrameProc *pFun, LPVOID lParam, HWND hWndDisplay, LPCTSTR strFileName) = 0;

	/*----------------------------------------------------------------------*\
	| 功  能：反初始化相机                                                 
	|                                                                     
	| 返回值：调用成功返回STATUS_OK，否则返回错误代码                                                           
	| 注  意：                                                            
	|         用于释放内存分配空间和系统资源，必须在程序退出前调用                     
	\*----------------------------------------------------------------------*/
	virtual DeviceStatus DeviceUnInit() = 0;

	/*--------------------------------------------------------------------*\
	| 功  能：打开视频流                                     
	|                                                                      
	| 返回值：调用成功返回STATUS_OK，否则返回错误代码                      
	\*--------------------------------------------------------------------*/
	virtual DeviceStatus Start() = 0;

	/*--------------------------------------------------------------------*\
	| 功  能：停止视频流                                     
	|                                                                      
	| 返回值：调用成功返回STATUS_OK，否则返回错误代码                      
	\*--------------------------------------------------------------------*/
	virtual DeviceStatus Stop() = 0;

	/*--------------------------------------------------------------------*\
	| 功  能：视频流是否打开                                     
	|                                                                      
	| 返回值：视频流已经打开返回TRUE，否则返回FALSE                      
	\*--------------------------------------------------------------------*/
	virtual BOOL IsReceivingData() = 0;

	/*--------------------------------------------------------------------*\
	| 功  能：设置相机是否启用Get模式                                     
	|                                                                      
	| 返回值：调用成功返回STATUS_OK，否则返回错误代码         
	|                                                                      
	| 参  数：
	|		  1  BOOL		bGetMode		是否使用DeviceGetImageBuffer函数调用方式	输入参数	
	\*--------------------------------------------------------------------*/
	virtual DeviceStatus DeviceSetUsedGetMode(BOOL bGetMode) = 0;


	/*--------------------------------------------------------------------*\
	| 功  能：获取相机是否启用Get模式                                     
	|                                                                      
	| 返回值：调用成功返回STATUS_OK，否则返回错误代码         
	|                                                                      
	| 参  数：
	|		  1  BOOL		*pGetMode		是否使用DeviceGetImageBuffer函数调用方式	输出参数	
	\*--------------------------------------------------------------------*/
	virtual DeviceStatus DeviceGetUsedGetMode(BOOL *pGetMode) = 0;

	/*---------------------------------------------------------------------------------*\
	| 功  能：设置BAYER数据的转换模式                                                            
	|                                                                                
	| 返回值：调用成功返回STATUS_OK，否则返回错误代码                            
	|                                                                                
	| 参  数： 
	|         1  emDeviceBayerConvertMode	Mode	  BAYER数据的转换模式 		输入参数  
	\*---------------------------------------------------------------------------------*/
	virtual DeviceStatus DeviceSetBayerConvertMode(emDeviceBayerConvertMode Mode) = 0;

	/*---------------------------------------------------------------------------------*\
	| 功  能：获取BAYER数据的转换模式                                                            
	|                                                                                
	| 返回值：调用成功返回STATUS_OK，否则返回错误代码                            
	|                                                                                
	| 参  数： 
	|         1  emDeviceBayerConvertMode	*pConvMode	  BAYER数据的转换模式 		输出参数  
	\*---------------------------------------------------------------------------------*/
	virtual DeviceStatus DeviceGetBayerConvertMode(emDeviceBayerConvertMode *pConvMode) = 0;

	/*---------------------------------------------------------------------------------*\
	| 功  能：设置图像数据处理输出类型                                                            
	|                                                                                
	| 返回值：调用成功返回STATUS_OK，否则返回错误代码                            
	|                                                                                
	| 参  数： 
	|         1  emDeviceISPDataType	nType	  图像数据处理输出类型		输入参数  
	\*---------------------------------------------------------------------------------*/
	virtual DeviceStatus DeviceSetISPDataType(emDeviceISPDataType nType) = 0;

	/*---------------------------------------------------------------------------------*\
	| 功  能：获取图像数据处理输出类型                                                            
	|                                                                                
	| 返回值：调用成功返回STATUS_OK，否则返回错误代码                            
	|                                                                                
	| 参  数： 
	|         1  emDeviceISPDataType	*pType	  图像数据处理输出类型		输出参数  
	\*---------------------------------------------------------------------------------*/
	virtual DeviceStatus DeviceGetISPDataType(emDeviceISPDataType *pType) = 0;
	
	/*---------------------------------------------------------------------------------*\
	| 功  能：图像数据处理                                                            
	|                                                                                
	| 返回值：调用成功返回RGB24图像数据首地址，否则返回NULL                             
	|                                                                                
	| 参  数： 
	|         1  BYTE				*pbyRAW    图像数据首地址，回调函数参数				输入参数
	|         2  DeviceFrameInfo	*psFrInfo  图像帧数据信息，参见DeviceFrameInfo定义	输入参数                                                                   
	\*---------------------------------------------------------------------------------*/
	virtual BYTE* DeviceISP(BYTE *pbyRAW, DeviceFrameInfo *psFrInfo) = 0;

	/*---------------------------------------------------------------------------------*\
	| 功  能：图像数据处理                                                            
	|                                                                                
	| 返回值：调用成功返回BITMAP图像文件首地址，否则返回NULL                             
	|                                                                                
	| 参  数： 
	|         1  BYTE				*pbyRAW    图像数据首地址，回调函数参数				输入参数
	|         2  DeviceFrameInfo	*psFrInfo  图像帧数据信息，参见DeviceFrameInfo定义	输入参数    
	\*---------------------------------------------------------------------------------*/
	virtual BYTE* DeviceISP2(BYTE *pbyRAW, DeviceFrameInfo *psFrInfo) = 0;

	/*-----------------------------------------------------------------------------------*\
	| 功  能：显示RGB24位图像数据                                                        
	|                                                                                   
	| 返回值：调用成功返回TRUE，否则返回FALSE                                     
	|                                                                                   
	| 参  数：                                                                          
	|         1  BYTE				*pbRGB		RGB24图像数据首地址 					输入参数 
	|         2  DeviceFrameInfo    *psFrInfo   图像帧数据信息，参见DeviceFrameInfo定义	输入参数
	\*-----------------------------------------------------------------------------------*/
	virtual BOOL DeviceDisplayRGB24(BYTE *pbRGB, DeviceFrameInfo *psFrInfo) = 0;

	/*-------------------------------------------------------------------------*\
	| 功  能：设置显示模式
	|
	| 返回值：调用成功返回STATUS_OK，否则返回错误代码
	|
	| 参  数：
	|         1  emDisplayMode		displayMode		显示模式	输入参数
	|
	\*--------------------------------------------------------------------------*/
	virtual DeviceStatus DeviceSetDisplayMode(emDisplayMode displayMode) = 0;

	/*-------------------------------------------------------------------------*\
	| 功  能：设置显示的起始偏移值
	|
	| 返回值：调用成功返回STATUS_OK，否则返回错误代码
	|
	| 参  数：
	|         1  INT		iOffsetX		偏移的X坐标					输入参数
	|         2  INT        iOffsetY		偏移的Y坐标					输入参数
	|
	\*--------------------------------------------------------------------------*/
	virtual DeviceStatus DeviceSetDisplayOffset(INT iOffsetX, INT iOffsetY) = 0;

	/*---------------------------------------------------------------------------*\
	| 功  能：设置显示图像的尺寸
	|           
	| 返回值：调用成功返回STATUS_OK，否则返回错误代码
	|       
	| 参  数：         
	|         1  INT		iWidth         预览图像宽度                  输入参数                      
	|         2  INT		iHeight        预览图像高度                  输入参数                                                        
	\*---------------------------------------------------------------------------*/
	virtual DeviceStatus DeviceSetDisplaySize(INT iWidth, INT iHeight) = 0;

	/*---------------------------------------------------------------------------*\
	| 功  能：获取一帧图像数据
	|           
	| 返回值：调用成功返回STATUS_OK，否则返回错误代码
	|       
	| 参  数：         
	|         1  BYTE		**pbyBuffer			图像数据保存的首地址					输入参数                      
	|         2  DWORD		wTimes				抓取图像的超时时间,单位毫秒。			输入参数           
	|         3  DeviceFrameInfo    *psFrInfo   图像帧数据信息，参见DeviceFrameInfo定义	输出参数
	\*---------------------------------------------------------------------------*/
	virtual DeviceStatus DeviceGetImageBuffer(BYTE **pbyBuffer, DWORD wTimes, DeviceFrameInfo *psFrInfo) = 0;

	/*---------------------------------------------------------------------------*\
	| 功  能：获取一帧图像数据(该接口获得的图像是经过处理后的ISP数据格式)
	|           
	| 返回值：成功时，返回数据缓冲区的首地址，否则返回NULL。
	|       
	| 参  数：                             
	|         1  DWORD				wTimes		抓取图像的超时时间,单位毫秒。			输入参数           
	|         2  DeviceFrameInfo    *psFrInfo   图像帧数据信息，参见DeviceFrameInfo定义	输出参数
	\*---------------------------------------------------------------------------*/
	virtual BYTE* DeviceGetImageBufferEx(DWORD wTimes, DeviceFrameInfo *psFrInfo) = 0;

	/*---------------------------------------------------------------------------*\
	| 功  能：获得一帧图像数据。该接口获得的图像是经过处理后的ISP数据格式。
	|           
	| 返回值：调用成功返回STATUS_OK，否则返回错误代码
	|       
	| 参  数：         
	|         1  BYTE				*pImageData		接收图像数据的缓冲区						输入参数
	|		  2  UINT				wTimes			抓取图像的超时时间,单位毫秒。				输入参数 
	|         3  DeviceFrameInfo    *psFrInfo		图像帧数据信息，参见DeviceFrameInfo定义		输出参数
	\*---------------------------------------------------------------------------*/
	virtual DeviceStatus DeviceGetImageBufferEx2(BYTE* pImageData, UINT wTimes, DeviceFrameInfo *psFrInfo) = 0;

	/*-----------------------------------------------------------------------------------*\
	| 功  能：采集单帧或多帧图像到内存                                                        
	|                                                                                   
	| 返回值：调用成功返回STATUS_OK，否则返回错误代码                                    
	|                                                                                   
	| 参  数：                                                                          
	|         1  BYTE				*pbyRAW		图像数据保存的首地址					输入参数 
	|         2  UINT				nFrames		采集图像的帧数							输入参数
	|         3  DeviceFrameInfo    *psFrInfo   图像帧数据信息，参见DeviceFrameInfo定义	输出参数
	| 注  意：
	|         1、调用此函数时，视频流必须停止
	\*-----------------------------------------------------------------------------------*/
	virtual DeviceStatus SnapShot(BYTE *pbyRAW, UINT nFrames, DeviceFrameInfo *psFrInfo) = 0;

	/*-----------------------------------------------------------------------------------*\
	| 功  能：获取相机设备参数范围                                                       
	|                                                                                   
	| 返回值：调用成功返回STATUS_OK，否则返回错误代码                                      
	|                                                                                   
	| 参  数：                                                                          
	|         1  DeviceCapability	*pDeviceInfo	相机设备参数范围结构	输出参数
	\*-----------------------------------------------------------------------------------*/
	virtual DeviceStatus GetCapability(DeviceCapability *pDeviceInfo) = 0;
	
	/*-----------------------------------------------------------------------------------*\
	| 功  能：获取相机设备最大图像范围大小                                                       
	|                                                                                   
	| 返回值：调用成功返回STATUS_OK，否则返回错误代码                                      
	|                                                                                   
	| 参  数：                                                                          
	|         1  INT	*piWidth	最大宽度	输出参数
	|         2  INT	*piHeight	最大高度	输出参数
	\*-----------------------------------------------------------------------------------*/
	virtual DeviceStatus GetCapabilityImageSize(INT *piWidth, INT *piHeight) = 0;

	/*-----------------------------------------------------------------------------------*\
	| 功  能：获取相机设备当前图像大小                                                       
	|                                                                                   
	| 返回值：调用成功返回STATUS_OK，否则返回错误代码                                      
	|                                                                                   
	| 参  数：                                                                          
	|         1  INT	*piWidth	宽度	输出参数
	|         2  INT	*piHeight	高度	输出参数
	\*-----------------------------------------------------------------------------------*/
	virtual DeviceStatus GetImageSize(INT *piWidth, INT *piHeight) = 0;

	/*-----------------------------------------------------------------------------------*\
	| 功  能：获取相机预设分辨率数据                                                       
	|                                                                                   
	| 返回值：调用成功返回预设分辨率的数量，否则返回0                                      
	|                                                                                   
	| 参  数：                                                                          
	|         1  LPDeviceResolutionItem	lpDevRes	指向相机分辨率描述结构的指针	输出参数
	\*-----------------------------------------------------------------------------------*/
	virtual int GetResolutions(LPDeviceResolutionItem lpDevRes = NULL) = 0;

	/*-----------------------------------------------------------------------------------*\
	| 功  能：设置相机当前分辨率                                                       
	|                                                                                   
	| 返回值：调用成功返回STATUS_OK，否则返回错误代码                                       
	|                                                                                   
	| 参  数：                                                                          
	|         1  ResolutionParam	param	相机分辨率模式参数	输入参数
	\*-----------------------------------------------------------------------------------*/
	virtual DeviceStatus SetResolution(ResolutionParam param) = 0;

	/*-----------------------------------------------------------------------------------*\
	| 功  能：获取相机当前分辨率                                                       
	|                                                                                   
	| 返回值：调用成功返回STATUS_OK，否则返回错误代码                                       
	|                                                                                   
	| 参  数：                                                                          
	|         1  ResolutionParam	*pParam	指向相机分辨率模式结构的指针	输出参数
	\*-----------------------------------------------------------------------------------*/
	virtual DeviceStatus GetResolution(ResolutionParam *pParam) = 0;

	/*-----------------------------------------------------------------------------------*\
	| 功  能：设置输出图像数据的类型                                                       
	|                                                                                   
	| 返回值：调用成功返回STATUS_OK，否则返回错误代码                                       
	|                                                                                   
	| 参  数：                                                                          
	|         1  DeviceDataType	dataType	图像数据类型	输入参数
	\*-----------------------------------------------------------------------------------*/
	virtual DeviceStatus SetMediaType(emDeviceDataType dataType) = 0;

	/*-----------------------------------------------------------------------------------*\
	| 功  能：获取输出图像数据的类型                                                       
	|                                                                                   
	| 返回值：调用成功返回STATUS_OK，否则返回错误代码                                       
	|                                                                                   
	| 参  数：                                                                          
	|         1  DeviceDataType	*pDataType	图像数据类型	输出参数
	\*-----------------------------------------------------------------------------------*/
	virtual DeviceStatus GetMediaType(emDeviceDataType *pDataType) = 0;

	/*-----------------------------------------------------------------------------------*\
	| 功  能：设置帧率                                                       
	|                                                                                   
	| 返回值：调用成功返回STATUS_OK，否则返回错误代码                                       
	|                                                                                   
	| 参  数：                                                                          
	|         1  DeviceSpeed	dSpeed		帧率						输入参数
	|		  2  BOOL			bAutoTune	自动调整速度微调到默认		输入参数
	\*-----------------------------------------------------------------------------------*/
	virtual DeviceStatus SetFrameSpeed(emDeviceFrameSpeed dSpeed, BOOL bAutoTune = FALSE) = 0;

	/*-----------------------------------------------------------------------------------*\
	| 功  能：获取帧率                                                       
	|                                                                                   
	| 返回值：调用成功返回STATUS_OK，否则返回错误代码                                       
	|                                                                                   
	| 参  数：                                                                          
	|         1  ResolutionParam	*pParam	帧率	输出参数
	\*-----------------------------------------------------------------------------------*/
	virtual DeviceStatus GetFrameSpeed(emDeviceFrameSpeed *pdSpeed) = 0;

	/*-----------------------------------------------------------------------------------*\
	| 功  能：设置速度微调                                                       
	|                                                                                   
	| 返回值：调用成功返回STATUS_OK，否则返回错误代码                                       
	|                                                                                   
	| 参  数：                                                                          
	|         1  FLOAT	fTune	微调系数（范围0.0 - 1.0）	输入参数
	\*-----------------------------------------------------------------------------------*/
	virtual DeviceStatus SetFrameSpeedTune(FLOAT fTune) = 0;

	/*-----------------------------------------------------------------------------------*\
	| 功  能：获取速度微调                                                       
	|                                                                                   
	| 返回值：调用成功返回STATUS_OK，否则返回错误代码                                       
	|                                                                                   
	| 参  数：                                                                          
	|         1  FLOAT	*pfTune	微调系数（范围0.0 - 1.0）	输出参数
	\*-----------------------------------------------------------------------------------*/
	virtual DeviceStatus GetFrameSpeedTune(FLOAT *pfTune) = 0;

	/*-----------------------------------------------------------------------------------*\
	| 功  能：设置触发模式                                                       
	|                                                                                   
	| 返回值：调用成功返回STATUS_OK，否则返回错误代码                                       
	|                                                                                   
	| 参  数：                                                                          
	|         1  DeviceCaptureMode	mode	触发模式	输入参数
	\*-----------------------------------------------------------------------------------*/
	virtual DeviceStatus SetCaptureMode(emDeviceCaptureMode mode) = 0;

	/*-----------------------------------------------------------------------------------*\
	| 功  能：获取触发模式                                                       
	|                                                                                   
	| 返回值：调用成功返回STATUS_OK，否则返回错误代码                                       
	|                                                                                   
	| 参  数：                                                                          
	|         1  DeviceCaptureMode	*pCapMode	触发模式	输出参数
	\*-----------------------------------------------------------------------------------*/
	virtual DeviceStatus GetCaptureMode(emDeviceCaptureMode  *pCapMode) = 0;

	/*-----------------------------------------------------------------------------------*\
	| 功  能：设置软触发一次帧数                                                       
	|                                                                                   
	| 返回值：调用成功返回STATUS_OK，否则返回错误代码                                       
	|                                                                                   
	| 参  数：                                                                          
	|         1  UINT	nFrame	软触发一次帧数	输入参数
	\*-----------------------------------------------------------------------------------*/
	virtual DeviceStatus SetSoftTriggerFrameNumber(UINT nFrame) = 0;

	/*-----------------------------------------------------------------------------------*\
	| 功  能：获取软触发一次帧数                                                       
	|                                                                                   
	| 返回值：调用成功返回STATUS_OK，否则返回错误代码                                       
	|                                                                                   
	| 参  数：                                                                          
	|         1  UINT	*pFrameNum	软触发一次帧数	输出参数
	\*-----------------------------------------------------------------------------------*/
	virtual DeviceStatus GetSoftTriggerFrameNumber(UINT *pFrameNum) = 0;

	/*-----------------------------------------------------------------------------------*\
	| 功  能：软触发一次                                                       
	|                                                                                   
	| 返回值：调用成功返回STATUS_OK，否则返回错误代码                                       
	\*-----------------------------------------------------------------------------------*/
	virtual DeviceStatus SoftTriggerOnce() = 0;

	/*-----------------------------------------------------------------------------------*\
	| 功  能：设置GPIO输出                                                       
	|                                                                                   
	| 返回值：调用成功返回STATUS_OK，否则返回错误代码   
	|
	| 参  数：                                                                          
	|         1  emGPIOOutputMode	OutputMode	GPIO输出模式					输入参数
	|		  2  WORD				value		脉冲宽度（仅脉冲模式时有效）	输入参数
	\*-----------------------------------------------------------------------------------*/
	virtual DeviceStatus SetGPIOOutput(emGPIOOutputMode OutputMode, WORD value) = 0;

	/*-----------------------------------------------------------------------------------*\
	| 功  能：获取GPIO输出                                                       
	|                                                                                   
	| 返回值：调用成功返回STATUS_OK，否则返回错误代码   
	|
	| 参  数：                                                                          
	|         1  emGPIOOutputMode	*pOutputMode	GPIO输出模式					输出参数
	|		  2  WORD				*pValue			脉冲宽度（仅脉冲模式时有效）	输出参数
	\*-----------------------------------------------------------------------------------*/
	virtual DeviceStatus GetGPIOOutput(emGPIOOutputMode *pOutputMode, WORD *pValue) = 0;

	/*-----------------------------------------------------------------------------------*\
	| 功  能：设置曝光时间                                                       
	|                                                                                   
	| 返回值：调用成功返回STATUS_OK，否则返回错误代码                                       
	|                                                                                   
	| 参  数：                                                                          
	|         1  USHORT	usExposureTime	曝光时间	输入参数
	\*-----------------------------------------------------------------------------------*/
	virtual DeviceStatus SetExposureTime(USHORT usExposureTime) = 0;

	/*-----------------------------------------------------------------------------------*\
	| 功  能：获取曝光时间                                                        
	|                                                                                   
	| 返回值：调用成功返回STATUS_OK，否则返回错误代码                                       
	|                                                                                   
	| 参  数：                                                                          
	|         1  USHORT	*pusExposureTime	曝光时间	输出参数
	\*-----------------------------------------------------------------------------------*/
	virtual DeviceStatus GetExposureTime(USHORT *pusExposureTime) = 0;

	/*-----------------------------------------------------------------------------------*\
	| 功  能：设置自动曝光目标值                                                      
	|                                                                                   
	| 返回值：调用成功返回STATUS_OK，否则返回错误代码                                       
	|                                                                                   
	| 参  数：                                                                          
	|         1  BYTE	byTarget	自动曝光目标值	输入参数
	\*-----------------------------------------------------------------------------------*/
	virtual DeviceStatus SetAutoExposureTarget(BYTE byTarget) = 0;

	/*-----------------------------------------------------------------------------------*\
	| 功  能：获取自动曝光目标值                                                       
	|                                                                                   
	| 返回值：调用成功返回STATUS_OK，否则返回错误代码                                       
	|                                                                                   
	| 参  数：                                                                          
	|         1  BYTE	*pbyTarget	自动曝光目标值	输出参数
	\*-----------------------------------------------------------------------------------*/
	virtual DeviceStatus GetAutoExposureTarget(BYTE *pbyTarget) = 0;

	/*-----------------------------------------------------------------------------------*\
	| 功  能：设置各色彩通道的增益                                                      
	|                                                                                   
	| 返回值：调用成功返回STATUS_OK，否则返回错误代码                                       
	|                                                                                   
	| 参  数：                                                                          
	|         1  USHORT	RGain	红通道增益	输入参数
	|         2  USHORT	GGain	绿通道增益	输入参数
	|         3  USHORT	BGain	蓝通道增益	输入参数
	\*-----------------------------------------------------------------------------------*/
	virtual DeviceStatus SetGain(USHORT RGain, USHORT GGain, USHORT BGain) = 0;

	/*-----------------------------------------------------------------------------------*\
	| 功  能：获取各色彩通道的增益                                                      
	|                                                                                   
	| 返回值：调用成功返回STATUS_OK，否则返回错误代码                                       
	|                                                                                   
	| 参  数：                                                                          
	|         1  USHORT	*pRGain	红通道增益	输出参数
	|         2  USHORT	*pGGain	绿通道增益	输出参数
	|         3  USHORT	*pBGain	蓝通道增益	输出参数
	\*-----------------------------------------------------------------------------------*/
	virtual DeviceStatus GetGain(USHORT *pRGain, USHORT *pGGain, USHORT *pBGain) = 0;

	/*-----------------------------------------------------------------------------------*\
	| 功  能：设置曝光增益                                                      
	|                                                                                   
	| 返回值：调用成功返回STATUS_OK，否则返回错误代码                                       
	|                                                                                   
	| 参  数：                                                                          
	|         1  USHORT	uGain	曝光增益	输入参数
	\*-----------------------------------------------------------------------------------*/
	virtual DeviceStatus SetAnalogGain(USHORT uGain) = 0;

	/*-----------------------------------------------------------------------------------*\
	| 功  能：获取曝光增益                                                      
	|                                                                                   
	| 返回值：调用成功返回STATUS_OK，否则返回错误代码                                       
	|                                                                                   
	| 参  数：                                                                          
	|         1  USHORT	*pGain	曝光增益	输出参数
	\*-----------------------------------------------------------------------------------*/
	virtual DeviceStatus GetAnalogGain(USHORT *pGain) = 0;

	/*-----------------------------------------------------------------------------------*\
	| 功  能：设置伽玛状态                                                      
	|                                                                                   
	| 返回值：调用成功返回STATUS_OK，否则返回错误代码                                       
	|                                                                                   
	| 参  数：                                                                          
	|         1  BOOL	bEnable		状态	输入参数
	| 注意： 当bEnable为FALSE时，SetGamma函数设置的值会被忽略
	\*-----------------------------------------------------------------------------------*/
	virtual DeviceStatus SetGammaState(BOOL bEnable) = 0;

	/*-----------------------------------------------------------------------------------*\
	| 功  能：获取伽玛状态                                                     
	|                                                                                   
	| 返回值：调用成功返回STATUS_OK，否则返回错误代码                                       
	|                                                                                   
	| 参  数：                                                                          
	|         1  BOOL	*pEnable	状态	输出参数
	\*-----------------------------------------------------------------------------------*/
	virtual DeviceStatus GetGammaState(BOOL *pEnable) = 0;

	/*-----------------------------------------------------------------------------------*\
	| 功  能：设置伽玛值                                                     
	|                                                                                   
	| 返回值：调用成功返回STATUS_OK，否则返回错误代码                                       
	|                                                                                   
	| 参  数：                                                                          
	|         1  FLOAT	fGamma		伽玛值	输入参数
	\*-----------------------------------------------------------------------------------*/
	virtual DeviceStatus SetGamma(FLOAT fGamma) = 0;

	/*-----------------------------------------------------------------------------------*\
	| 功  能：获取伽玛值                                                     
	|                                                                                   
	| 返回值：调用成功返回STATUS_OK，否则返回错误代码                                       
	|                                                                                   
	| 参  数：                                                                          
	|         1  FLOAT	*pfGamma	伽玛值	输出参数
	\*-----------------------------------------------------------------------------------*/
	virtual DeviceStatus GetGamma(FLOAT *pfGamma) = 0;

	/*-----------------------------------------------------------------------------------*\
	| 功  能：设置亮度状态                                                     
	|                                                                                   
	| 返回值：调用成功返回STATUS_OK，否则返回错误代码                                       
	|                                                                                   
	| 参  数：                                                                          
	|         1  BOOL	bEnable		状态	输入参数
	| 注意： 当bEnable为FALSE时，SetBright函数设置的值会被忽略
	\*-----------------------------------------------------------------------------------*/
	virtual DeviceStatus SetBrightState(BOOL bEnable) = 0;

	/*-----------------------------------------------------------------------------------*\
	| 功  能：获取亮度状态                                                     
	|                                                                                   
	| 返回值：调用成功返回STATUS_OK，否则返回错误代码                                       
	|                                                                                   
	| 参  数：                                                                          
	|         1  BOOL 	*pEnable	状态	输出参数
	\*-----------------------------------------------------------------------------------*/
	virtual DeviceStatus GetBrightState(BOOL *pEnable) = 0;

	/*-----------------------------------------------------------------------------------*\
	| 功  能：设置亮度值                                                     
	|                                                                                   
	| 返回值：调用成功返回STATUS_OK，否则返回错误代码                                       
	|                                                                                   
	| 参  数：                                                                          
	|         1  SHORT	shBright	亮度值	输入参数
	\*-----------------------------------------------------------------------------------*/
	virtual DeviceStatus SetBright(SHORT shBright) = 0;

	/*-----------------------------------------------------------------------------------*\
	| 功  能：获取亮度值                                                     
	|                                                                                   
	| 返回值：调用成功返回STATUS_OK，否则返回错误代码                                       
	|                                                                                   
	| 参  数：                                                                          
	|         1  SHORT	*pshBright	亮度值	输出参数
	\*-----------------------------------------------------------------------------------*/
	virtual DeviceStatus GetBright(SHORT *pshBright) = 0;

	/*-----------------------------------------------------------------------------------*\
	| 功  能：设置对比度状态                                                     
	|                                                                                   
	| 返回值：调用成功返回STATUS_OK，否则返回错误代码                                       
	|                                                                                   
	| 参  数：                                                                          
	|         1  BOOL	bEnable		状态	输入参数
	| 注意： 当bEnable为FALSE时，SetContrast函数设置的值会被忽略
	\*-----------------------------------------------------------------------------------*/
	virtual DeviceStatus SetContrastState(BOOL bEnable) = 0;

	/*-----------------------------------------------------------------------------------*\
	| 功  能：获取对比度状态                                                    
	|                                                                                   
	| 返回值：调用成功返回STATUS_OK，否则返回错误代码                                       
	|                                                                                   
	| 参  数：                                                                          
	|         1  BOOL	*pEnable	状态	输出参数
	\*-----------------------------------------------------------------------------------*/
	virtual DeviceStatus GetContrastState(BOOL *pEnable) = 0;

	/*-----------------------------------------------------------------------------------*\
	| 功  能：设置对比度值                                                     
	|                                                                                   
	| 返回值：调用成功返回STATUS_OK，否则返回错误代码                                       
	|                                                                                   
	| 参  数：                                                                          
	|         1  SHORT	shContrast		对比度值	输入参数
	\*-----------------------------------------------------------------------------------*/
	virtual DeviceStatus SetContrast(SHORT shContrast) = 0;

	/*-----------------------------------------------------------------------------------*\
	| 功  能：获取对比度值                                                     
	|                                                                                   
	| 返回值：调用成功返回STATUS_OK，否则返回错误代码                                       
	|                                                                                   
	| 参  数：                                                                          
	|         1  SHORT	*pshContrast	对比度值	输出参数
	\*-----------------------------------------------------------------------------------*/
	virtual DeviceStatus GetContrast(SHORT *pshContrast) = 0;

	/*-----------------------------------------------------------------------------------*\
	| 功  能：设置饱和度状态                                                     
	|                                                                                   
	| 返回值：调用成功返回STATUS_OK，否则返回错误代码                                       
	|                                                                                   
	| 参  数：                                                                          
	|         1  BOOL	bEnable		状态	输入参数
	| 注意： 当bEnable为FALSE时，SetSaturation函数设置的值会被忽略
	\*-----------------------------------------------------------------------------------*/
	virtual DeviceStatus SetSaturationState(BOOL bEnable) = 0;

	/*-----------------------------------------------------------------------------------*\
	| 功  能：获取饱和度状态                                                   
	|                                                                                   
	| 返回值：调用成功返回STATUS_OK，否则返回错误代码                                       
	|                                                                                   
	| 参  数：                                                                          
	|         1  BOOL	*pEnable	状态	输出参数
	\*-----------------------------------------------------------------------------------*/
	virtual DeviceStatus GetSaturationState(BOOL *pEnable) = 0;

	/*-----------------------------------------------------------------------------------*\
	| 功  能：设置饱和度值                                                     
	|                                                                                   
	| 返回值：调用成功返回STATUS_OK，否则返回错误代码                                       
	|                                                                                   
	| 参  数：                                                                          
	|         1  BYTE	bySaturation	饱和度值	输入参数
	\*-----------------------------------------------------------------------------------*/
	virtual DeviceStatus SetSaturation(BYTE bySaturation) = 0;

	/*-----------------------------------------------------------------------------------*\
	| 功  能：获取饱和度值                                                     
	|                                                                                   
	| 返回值：调用成功返回STATUS_OK，否则返回错误代码                                       
	|                                                                                   
	| 参  数：                                                                          
	|         1  BYTE	*pbySaturation		饱和度值	输出参数
	\*-----------------------------------------------------------------------------------*/
	virtual DeviceStatus GetSaturation(BYTE *pbySaturation) = 0;
	
	/*-----------------------------------------------------------------------------------*\
	| 功  能：设置图像翻转状态                                                    
	|                                                                                   
	| 返回值：调用成功返回STATUS_OK，否则返回错误代码                                       
	|                                                                                   
	| 参  数：                                                                          
	|         1  MirrorDirection	mDir		图像翻转方向标识（水平或垂直）	输入参数
	|         2  BOOL				bEnable		图像翻转状态					输入参数
	\*-----------------------------------------------------------------------------------*/
	virtual DeviceStatus SetMirror(emMirrorDirection mDir, BOOL bEnable) = 0;

	/*-----------------------------------------------------------------------------------*\
	| 功  能：获取图像翻转状态                                                     
	|                                                                                   
	| 返回值：调用成功返回STATUS_OK，否则返回错误代码                                       
	|                                                                                   
	| 参  数：                                                                          
	|         1  MirrorDirection	mDir		图像翻转方向标识（水平或垂直）	输入参数
	|         2  BOOL				*pEnable	图像翻转状态					输出参数
	\*-----------------------------------------------------------------------------------*/
	virtual DeviceStatus GetMirror(emMirrorDirection mDir, BOOL *pEnable) = 0;

	/*-----------------------------------------------------------------------------------*\
	| 功  能：设置图像单色状态                                                     
	|                                                                                   
	| 返回值：调用成功返回STATUS_OK，否则返回错误代码                                       
	|                                                                                   
	| 参  数：                                                                          
	|         1  BOOL	bEnable		图像单色状态	输入参数
	\*-----------------------------------------------------------------------------------*/
	virtual DeviceStatus SetMonochrome(BOOL bEnable) = 0;

	/*-----------------------------------------------------------------------------------*\
	| 功  能：获取图像单色状态                                                     
	|                                                                                   
	| 返回值：调用成功返回STATUS_OK，否则返回错误代码                                       
	|                                                                                   
	| 参  数：                                                                          
	|         1  BOOL	*pEnable	图像单色状态	输出参数
	\*-----------------------------------------------------------------------------------*/
	virtual DeviceStatus GetMonochrome(BOOL *pEnable) = 0;

	/*-----------------------------------------------------------------------------------*\
	| 功  能：设置图像反色状态                                                    
	|                                                                                   
	| 返回值：调用成功返回STATUS_OK，否则返回错误代码                                       
	|                                                                                   
	| 参  数：                                                                          
	|         1  BOOL	bEnable		伽玛值	输入参数
	\*-----------------------------------------------------------------------------------*/
	virtual DeviceStatus SetInverse(BOOL bEnable) = 0;

	/*-----------------------------------------------------------------------------------*\
	| 功  能：获取图像反色状态                                                     
	|                                                                                   
	| 返回值：调用成功返回STATUS_OK，否则返回错误代码                                       
	|                                                                                   
	| 参  数：                                                                          
	|         1  BOOL	*pEnable		伽玛值	输入参数
	\*-----------------------------------------------------------------------------------*/
	virtual DeviceStatus GetInverse(BOOL *pEnable) = 0;

	/*-----------------------------------------------------------------------------------*\
	| 功  能：一次白平衡功能                                                     
	|                                                                                   
	| 返回值：调用成功返回STATUS_OK，否则返回错误代码                                       
	\*-----------------------------------------------------------------------------------*/
	virtual DeviceStatus SetOnceWBalace() = 0;

	/*-----------------------------------------------------------------------------------*\
	| 功  能：设置自动曝光状态                                                     
	|                                                                                   
	| 返回值：调用成功返回STATUS_OK，否则返回错误代码                                       
	|                                                                                   
	| 参  数：                                                                          
	|         1  BOOL	bAEState	自动曝光状态	输入参数
	\*-----------------------------------------------------------------------------------*/
	virtual DeviceStatus SetAutoExposureState(BOOL bAEState) = 0;

	/*-----------------------------------------------------------------------------------*\
	| 功  能：获取自动曝光状态                                                     
	|                                                                                   
	| 返回值：调用成功返回STATUS_OK，否则返回错误代码                                       
	|                                                                                   
	| 参  数：                                                                          
	|         1  BOOL	*pAEState	自动曝光状态	输出参数
	\*-----------------------------------------------------------------------------------*/
	virtual DeviceStatus GetAutoExposureState(BOOL *pAEState) = 0;

	/*-----------------------------------------------------------------------------------*\
	| 功  能：设置自动白平衡状态                                                     
	|                                                                                   
	| 返回值：调用成功返回STATUS_OK，否则返回错误代码                                       
	|                                                                                   
	| 参  数：                                                                          
	|         1  BOOL	bAWBState		自动白平衡状态	输入参数
	\*-----------------------------------------------------------------------------------*/
	virtual DeviceStatus SetAutoWBalaceState(BOOL bAWBState) = 0;

	/*-----------------------------------------------------------------------------------*\
	| 功  能：获取自动白平衡状态                                                      
	|                                                                                   
	| 返回值：调用成功返回STATUS_OK，否则返回错误代码                                       
	|                                                                                   
	| 参  数：                                                                          
	|         1  BOOL	*pAWBState		伽玛值	输出参数
	\*-----------------------------------------------------------------------------------*/
	virtual DeviceStatus GetAutoWBalaceState(BOOL *pAWBState) = 0;

	/*-----------------------------------------------------------------------------------*\
	| 功  能：保存当前图像到文件                                                     
	|                                                                                   
	| 返回值：调用成功返回STATUS_OK，否则返回错误代码                                       
	|                                                                                   
	| 参  数：                                                                          
	|         1  LPCTSTR	  lpszFileName	图像文件路径和名称		输入参数
	|		  2  emDSFileType type			图像文件类型            输入参数
	\*-----------------------------------------------------------------------------------*/
	virtual DeviceStatus CaptureFile(LPCTSTR lpszFileName, emDSFileType type) = 0;

	/*-----------------------------------------------------------------------------------*\
	| 功  能：开启录影功能                                                     
	|                                                                                   
	| 返回值：调用成功返回STATUS_OK，否则返回错误代码                                       
	|                                                                                   
	| 参  数：                                                                          
	|         1  LPCTSTR	lpszFileName	视频文件的路径和名称	输入参数
	\*-----------------------------------------------------------------------------------*/
	virtual DeviceStatus StartRecordVideo(LPCTSTR lpszFileName) = 0;

	/*-----------------------------------------------------------------------------------*\
	| 功  能：停止录影功能                                                    
	|                                                                                   
	| 返回值：调用成功返回STATUS_OK，否则返回错误代码                                       
	\*-----------------------------------------------------------------------------------*/
	virtual DeviceStatus StopRecordVideo() = 0;

	/*-----------------------------------------------------------------------------------*\
	| 功  能：读出相机默认出厂参数设置                                                     
	|                                                                                   
	| 返回值：调用成功返回STATUS_OK，否则返回错误代码                                     
	\*-----------------------------------------------------------------------------------*/
	virtual DeviceStatus LoadDefaultParameter() = 0;

	/*-----------------------------------------------------------------------------------*\
	| 功  能：获取当前使用的保存参数组别                                                     
	|                                                                                   
	| 返回值：调用成功返回STATUS_OK，否则返回错误代码                                       
	|                                                                                   
	| 参  数：                                                                          
	|         1  ParameterTeam	*pTeam	保存参数的组别（共4组）	输出参数
	\*-----------------------------------------------------------------------------------*/
	virtual DeviceStatus GetCurrentParameterTeam(emParameterTeam *pTeam) = 0;

	/*-----------------------------------------------------------------------------------*\
	| 功  能：读取相机的参数设置，并使其生效                                                     
	|                                                                                   
	| 返回值：调用成功返回STATUS_OK，否则返回错误代码                                       
	|                                                                                   
	| 参  数：                                                                          
	|         1  ParameterTeam	eTeam	保存参数的组别（共4组）	输入参数
	\*-----------------------------------------------------------------------------------*/
	virtual DeviceStatus ReadParameter(emParameterTeam eTeam) = 0;

	/*-----------------------------------------------------------------------------------*\
	| 功  能：保存相机的参数设置                                                     
	|                                                                                   
	| 返回值：调用成功返回STATUS_OK，否则返回错误代码                                       
	|                                                                                   
	| 参  数：                                                                          
	|         1  ParameterTeam	eTeam	保存参数的组别（共4组）	输入参数
	\*-----------------------------------------------------------------------------------*/
	virtual DeviceStatus SaveParameter(emParameterTeam eTeam) = 0;

	/*-----------------------------------------------------------------------------------*\
	| 功  能：从文件中读取相机的参数设置，并使其生效                                                     
	|                                                                                   
	| 返回值：调用成功返回STATUS_OK，否则返回错误代码                                       
	|                                                                                   
	| 参  数：                                                                          
	|         1  LPCTSTR	strFileName	读取参数的文件	输入参数
	\*-----------------------------------------------------------------------------------*/
	virtual DeviceStatus ReadParameterFromFile(LPCTSTR strFileName) = 0;

	/*-----------------------------------------------------------------------------------*\
	| 功  能：保存相机的参数设置到文件                                                     
	|                                                                                   
	| 返回值：调用成功返回STATUS_OK，否则返回错误代码                                       
	|                                                                                   
	| 参  数：                                                                          
	|         1  LPCTSTR	strFileName	保存参数的文件	输入参数
	\*-----------------------------------------------------------------------------------*/
	virtual DeviceStatus SaveParameterToFile(LPCTSTR strFileName) = 0;

	/*-----------------------------------------------------------------------------------*\
	| 功  能：获取扩展接口                                                     
	|                                                                                   
	| 返回值：调用成功返回STATUS_OK，否则返回错误代码                                       
	|                                                                                   
	| 参  数：                                                                          
	|         1  IID	riid	接口标识IID				输入参数
	|         2  void**	ppvObj	该接口函数的指针		输出参数
	\*-----------------------------------------------------------------------------------*/
	virtual DeviceStatus QueryInterface(const IID &riid, void **ppvObj) = 0;
};

#endif